---
import { Image } from "astro:assets";
import balanza from "../assets/images/equipos/balanza.png";
import termometro from "../assets/images/equipos/termometro.png";
import medidorVolumetrico from "../assets/images/equipos/medidor-volumetrico.png";
import manometro from "../assets/images/equipos/manometro.png";
import vernier from "../assets/images/equipos/vernier-2.png";
import balanza2 from "../assets/images/equipos/balanza-2.png";

interface GalleryItem {
  image: ImageMetadata;
  title: string;
  category: string;
  description?: string;
}

const galleryItems: GalleryItem[] = [
  {
    image: balanza,
    title: "Balanza de Precisión",
    category: "Masa",
    description: "Calibración de balanzas clase I con patrones certificados"
  },
  {
    image: termometro,
    title: "Termómetro Digital",
    category: "Temperatura",
    description: "Calibración en puntos fijos según norma internacional"
  },
  {
    image: medidorVolumetrico,
    title: "Medidor Volumétrico",
    category: "Volumen",
    description: "Calibración con métodos gravimétricos trazables"
  },
  {
    image: manometro,
    title: "Manómetro Industrial",
    category: "Presión",
    description: "Calibración en rangos desde 0-10 psi hasta 0-10,000 psi"
  },
  {
    image: vernier,
    title: "Vernier",
    category: "Dimensional",
    description: "Verificación de calibración de instrumentos de medición lineal"
  },
  {
    image: balanza2,
    title: "Balanza",
    category: "Masa",
    description: "Calibración para grandes masas"
  }
];


interface Props {
  title?: string;
  description?: string;
}

---

<div class="py-16 bg-gray-50">
  <div class="container mx-auto px-4">

    <!-- Filtros por categoría -->
    <div class="flex flex-wrap justify-center gap-3 mb-12">
      <button 
        class="px-4 py-2 rounded-full border border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white transition-colors duration-300"
        onclick="filterGallery('all')"
      >
        Todos
      </button>
      <button 
        class="px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors duration-300"
        onclick="filterGallery('Masa')"
      >
        Masa
      </button>
      <button 
        class="px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors duration-300"
        onclick="filterGallery('Temperatura')"
      >
        Temperatura
      </button>
      <button 
        class="px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors duration-300"
        onclick="filterGallery('Volumen')"
      >
        Volumen
      </button>
      <button 
        class="px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors duration-300"
        onclick="filterGallery('Presión')"
      >
        Presión
      </button>
            <button 
        class="px-4 py-2 rounded-full border border-gray-300 text-gray-700 hover:bg-gray-100 transition-colors duration-300"
        onclick="filterGallery('Dimensional')"
      >
        Dimensional
      </button>
    </div>

    <!-- Grid de imágenes -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8" id="galleryGrid">
      {galleryItems.map((item) => (
        <div 
          class="gallery-item bg-white rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300"
          data-category={item.category}
        >
          <div class="relative aspect-w-16 aspect-h-9 overflow-hidden">
            <Image 
              src={item.image} 
              alt={item.title} 
              class="w-full h-full object-cover transition-transform duration-500 hover:scale-105"
              width={600}
              height={400}
              loading="lazy"
            />
          </div>
          <div class="p-6">
            <h3 class="text-xl font-semibold text-gray-900 mb-2">{item.title}</h3>
            <p class="text-gray-600">{item.description}</p>
          </div>
        </div>
      ))}
    </div>

    <!-- Modal para imagen ampliada -->
    <div id="imageModal" class="hidden fixed inset-0 z-50 bg-black bg-opacity-90 overflow-y-auto">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="relative max-w-4xl w-full">
          <button 
            onclick="closeModal()"
            class="absolute -top-12 right-0 text-white hover:text-blue-400 transition-colors duration-300"
          >
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          
          <div class="bg-white rounded-lg overflow-hidden">
            <img id="modalImage" class="w-full h-auto max-h-[70vh] object-contain" src="" alt="">
            <div class="p-6">
              <h3 id="modalTitle" class="text-2xl font-bold text-gray-900 mb-2"></h3>
              <p id="modalDescription" class="text-gray-600"></p>
              <p id="modalCategory" class="mt-3 text-sm font-medium text-blue-600"></p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Script para funcionalidad de la galería -->
<script is:inline>
  // Filtrado por categoría
  function filterGallery(category) {
    const items = document.querySelectorAll('.gallery-item');
    
    items.forEach(item => {
      if (category === 'all' || item.dataset.category === category) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });
    
    // Actualizar botones activos
    document.querySelectorAll('[onclick^="filterGallery"]').forEach(btn => {
      const btnCategory = btn.getAttribute('onclick').replace('filterGallery(\'', '').replace('\')', '');
      if (btnCategory === category) {
        btn.classList.add('bg-blue-600', 'text-white');
        btn.classList.remove('border-gray-300', 'text-gray-700', 'hover:bg-gray-100');
      } else {
        btn.classList.remove('bg-blue-600', 'text-white');
        btn.classList.add('border-gray-300', 'text-gray-700', 'hover:bg-gray-100');
      }
      
      if (btnCategory === 'all' && category === 'all') {
        btn.classList.add('bg-blue-600', 'text-white');
      }
    });
  }

  // Asignar eventos a las imágenes
  document.addEventListener('DOMContentLoaded', function() {
    const items = document.querySelectorAll('.gallery-item');
    
    items.forEach(item => {
      const img = item.querySelector('img');
      const title = item.querySelector('h3').textContent;
      const description = item.querySelector('p').textContent;
      const category = item.dataset.category;
      
      item.addEventListener('click', () => {
        openModal(img.src, title, description, category);
      });
    });
    
    // Inicializar con filtro "Todos"
    filterGallery('all');
  });
</script>

<style>
  
  .gallery-item {
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .gallery-item:hover {
    transform: translateY(-5px);
  }
  
  .aspect-w-16 {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
  }
  
  .aspect-w-16 > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
</style>